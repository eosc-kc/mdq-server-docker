<?xml version="1.0" encoding="UTF-8"?>
<beans default-init-method="initialize"
       xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
  
    <!-- First, we define the stages for our pipeline -->
    <bean id="it_idem_productionAggregate_url" class="java.lang.String">
        <constructor-arg value="http://md.idem.garr.it/metadata/idem-metadata-sha256.xml"/>
    </bean>

    <bean id="it_idem_edugain_productionAggregate_url" class="java.lang.String">
        <constructor-arg value="http://md.idem.garr.it/metadata/edugain2idem-metadata-sha256.xml"/>
    </bean>

    <bean id="it_edugain_productionAggregate_url" class="java.lang.String">
        <constructor-arg value="https://mds.edugain.org/edugain-v1.xml"/>
    </bean>

    <bean id="it_idem_edugain_productionAggregate" parent="DOMResourceSourceStage"
        p:id="it_idem_edugain_productionAggregate">
        <property name="DOMResource">
            <bean parent="HTTPResource">
                <constructor-arg name="client" ref="httpClient"/>
                <constructor-arg name="url"    ref="it_idem_edugain_productionAggregate_url"/>
            </bean>
        </property>
    </bean>

    <bean id="test_entities" class="net.shibboleth.metadata.dom.DOMFilesystemSourceStage">
        <property name="id" value="source"/>
        <property name="parserPool">
            <bean class="net.shibboleth.utilities.java.support.xml.BasicParserPool" init-method="initialize"/>
        </property>
        <property name="source">
            <bean class="java.io.File">
                <constructor-arg value="${mdq.home}/entities.xml"/>
            </bean>
        </property>
    </bean>

    <bean id="it_idem_signingCertificate" parent="X509CertificateFactoryBean">
        <property name="resource">
            <bean parent="FileSystemResource">
                <constructor-arg value="${mdq.home}/it_idem/idem-signer-20220121.pem"/>
            </bean>
        </property>
    </bean>

    <bean id="it_idem_checkSignature" parent="XMLSignatureValidationStageSHA256"
        p:id="it_idem_checkSignature">
        <property name="verificationCertificate" ref="it_idem_signingCertificate"/>
    </bean>

    <bean id="retainIdPs" class="net.shibboleth.metadata.dom.saml.EntityRoleFilterStage"
    p:id="retainIdPs" p:whitelistingRoles="true">
        <property name="designatedRoles">
            <util:list>
                <bean class="javax.xml.namespace.QName">
                    <constructor-arg value="urn:oasis:names:tc:SAML:2.0:metadata"/>
                    <constructor-arg value="IDPSSODescriptor"/>
                </bean>
                <bean class="javax.xml.namespace.QName">
                    <constructor-arg value="urn:oasis:names:tc:SAML:2.0:metadata"/>
                    <constructor-arg value="AttributeAuthorityDescriptor"/>
                </bean>
            </util:list>
        </property>
    </bean>
  
    <bean id="disassembleEntitiesDescriptor" class="net.shibboleth.metadata.dom.saml.EntitiesDescriptorDisassemblerStage">
        <property name="id" value="disassembleEntitiesDescriptor"/>
    </bean>
  
    <bean id="populateItemID" class="net.shibboleth.metadata.dom.saml.EntityDescriptorItemIdPopulationStage">
        <property name="id" value="populateItemID"/>
    </bean>
  
    <bean id="generateContentReferenceId" class="net.shibboleth.metadata.dom.saml.GenerateIdStage">
        <property name="id" value="generateContentReferenceId" />
    </bean>

    <bean id="createEntitiesDescriptor" class="net.shibboleth.metadata.dom.saml.EntitiesDescriptorAssemblerStage">
        <property name="id" value="createEntitiesDescriptor"/>
    </bean>
  
    <bean id="signMetadata" class="net.shibboleth.metadata.dom.XMLSignatureSigningStage">
        <property name="id" value="signMetadata"/>
        <property name="privateKey">
            <bean class="net.shibboleth.ext.spring.factory.PrivateKeyFactoryBean">
                <property name="resource">
                    <bean class="org.springframework.core.io.FileSystemResource">
                        <constructor-arg>
                            <bean class="java.io.File">
                                <constructor-arg value="${creds.dir}/signing.key"/>
                            </bean>
                        </constructor-arg>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
  
    <bean id="serialize" class="net.shibboleth.metadata.pipeline.MultiOutputSerializationStage">
        <property name="id" value="serializeIdPs"/>
        <property name="serializer">
            <bean id="domSerializer" class="net.shibboleth.metadata.dom.DOMElementSerializer" />
        </property>
        <property name="outputStrategy">
            <bean class="net.shibboleth.metadata.pipeline.FilesInDirectoryMultiOutputStrategy">
                <property name="nameSuffix" value=".xml"/>
                <property name="namePrefix" value="_"/>
                <property name="directory">
                    <bean class="java.io.File">
                        <constructor-arg value="/root/shared-volume"/>
                    </bean>
                </property>
                <property name="nameTransformer">
                    <bean class="net.shibboleth.metadata.util.SHA1StringTransformer"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="serializeDiscoFeed" parent="mda.SerializationStage">
        <property name="serializer">
            <bean id="discogen" parent="mda.DiscoFeedCollectionSerializer"
                p:prettyPrinting="true"
                p:includingLegacyDisplayNames="true"/>
        </property>
        <property name="outputFile">
            <bean class="java.io.File">
                <constructor-arg value="/root/shared-volume/discofeed.json"/>
            </bean>
        </property>
    </bean>

    <bean id="serializeSignedMetadata" class="net.shibboleth.metadata.pipeline.SerializationStage">
        <property name="id" value="serializeSignedMetadata"/>
        <property name="serializer">
            <bean id="domSerializer" class="net.shibboleth.metadata.dom.DOMElementSerializer" />
        </property>
        <property name="outputFile">
            <bean class="java.io.File">
                <constructor-arg value="/root/shared-volume/pre-entity-output.xml"/>
            </bean>
        </property>
        
    </bean>
  
    <bean id="test-entities-pipeline" class="net.shibboleth.metadata.pipeline.CompositeStage"
        p:id="test-entities-pipeline">
        <property name="composedStages">
            <list>
                <ref bean="test_entities"/>
                <ref bean="disassembleEntitiesDescriptor"/>
                <ref bean="populateItemID"/>
                <ref bean="generateContentReferenceId" />
                <ref bean="signMetadata"/>
                <ref bean="serialize"/>
            </list>
        </property>
    </bean>

    <bean id="idem-edugain-pipeline" class="net.shibboleth.metadata.pipeline.CompositeStage"
        p:id="idem-edugain-pipeline">
        <property name="composedStages">
            <list>
                <ref bean="it_idem_edugain_productionAggregate"/>
                <ref bean="check_validUntil"/>
                <ref bean="it_idem_checkSignature"/>
                <ref bean="errorTerminatingFilter"/>
                <ref bean="retainIdPs"/>
                <ref bean="disassembleEntitiesDescriptor"/>
                <ref bean="populateItemID"/>
                <ref bean="generateContentReferenceId" />
                <ref bean="serializeDiscoFeed"/>
                <!--
                <ref bean="createEntitiesDescriptor"/>
                -->
                <ref bean="signMetadata"/>
                <ref bean="serialize"/>
            </list>
        </property>
    </bean>

    <bean id="source.SAML" class="net.shibboleth.metadata.pipeline.SimplePipeline" init-method="initialize">
        <property name="id" value="source.SAML"/>
        <property name="stages">
            <list>
                <ref bean="idem-edugain-pipeline"/>
                <ref bean="test-entities-pipeline"/>
                
            </list>
        </property>
    </bean>

</beans>